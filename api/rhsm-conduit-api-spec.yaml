openapi: "3.0.2"
info:
  title: "rhsm-conduit-api"
  description: "REST interface for the rhsm-conduit service."
  version: 1.0.0

servers:
  - url: http://localhost:8080/rhsm-conduit/v1
  - url: http://localhost:8080/{PATH_PREFIX}/{APP_NAME}/v1
    variables:
      PATH_PREFIX:
        default: r/insights/platform
      APP_NAME:
        default: rhsm-conduit

paths:
  /inventories/{org_id}:
    description: "All inventory operations related to a specific organization."
    parameters:
      - name: org_id
        in: path
        required: true
        schema:
          type: string
        description: "The org_id is the candlepin owner key."

    # TODO Address the following once we start building out the application
    #  * We probably don't need the ConsumerInventory or OrgInventory objects
    #    as this GET request could simply return what the IT service returns.
    #  * Likely temporary and just for testing.
    get:
      summary: "Fetch the inventory data for an organization without pushing to the inventory."
      operationId: getInventoryForOrg
      tags:
        - inventory
      responses:
        '200':
          description: 'The request for inventory data was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgInventory"
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: "Fetch the inventory data for an organization and push into the unified inventory store."
      operationId: updateInventoryForOrg
      tags:
        - inventory
      responses:
        # Could be 202 Accepted if we go async.
        '200':
          description: "The request to update the inventory was successful."
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /openapi.json:
    get:
      description: "Get the OpenAPI spec in JSON format."
      operationId: getOpenApiJson
      tags:
        - root
      responses:
        '200':
          description: "The request to get the OpenAPI JSON was successful."
          content:
            application/json:
              schema:
                type: string
  /openapi.yaml:
    get:
      description: "Get the OpenAPI spec in YAML format."
      operationId: getOpenApiYaml
      tags:
        - root
      responses:
        '200':
          description: "The request to get the OpenAPI YAML was successful."
          content:
            application/x-yaml:
              schema:
                type: string

components:
  responses:
    InternalServerError:
      description: "An internal server error has occurred and is not recoverable."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    BadRequest:
      description: "The server could could not process the current request."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    Forbidden:
      description: "The request was valid, but the request was refused by the server."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    ResourceNotFound:
      description: "The requested resource was not found."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"
    ServiceUnavailable:
      description: "The server is currently unavailable."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Errors"

  schemas:
    ConsumerInventory:
      # Container for fields we capture from the IT endpoint for upload to inventory service.
      required:
        - subscription_manager_id
        - org_id
      properties:
        subscription_manager_id:
          type: string
        insights_id:
          type: string
        org_id:
          type: string
        account_number:
          type: string
        bios_uuid:
          type: string
        ip_addresses:
          type: array
          items:
            type: string
        fqdn:
          type: string
        mac_addresses:
          type: array
          items:
            type: string
        cpu_sockets:
          type: integer
        cpu_cores:
          type: integer
        last_checkin:
          type: string
          format: date-time
        memory:
          type: integer
        architecture:
          type: string
        is_virtual:
          type: boolean
        is_hypervisor:
          type: boolean
        is_hypervisor_unknown:
          type: boolean
        vm_host:
          type: string
        rh_prod:
          type: array
          items:
            type: string

    OrgInventory:
      properties:
        consumer_inventories:
          type: array
          items:
            $ref: "#/components/schemas/ConsumerInventory"

    Errors:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"

    Error:
      required:
        - status
        - code
        - title
      properties:
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string

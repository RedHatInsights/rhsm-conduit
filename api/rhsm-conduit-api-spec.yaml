openapi: "3.0.2"
info:
  title: "rhsm-conduit-api"
  description: "REST interface for the rhsm-conduit service."
  version: 1.0.0

servers:
  - url: https://localhost/

paths:
  /inventory/{orgId}:
    description: "All inventory operations related to a specific organization."
    parameters:
      - name: x-rh-identity
        in: header
        required: true
        schema:
          type: string
          format: string
        description: "Base64-encoded JSON identity header provided by 3Scale.
              Contains an account number of the user issuing the request. Format of the
              JSON: {'identity': {'account_number': '12345678'}}"
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: "The orgId is the candlepin owner key."

    # TODO Address the following once we start building out the application
    #  * We probably don't need the ConsumerInventory or OrgInventory objects
    #    as this GET request could simply return what the IT service returns.
    #  * Likely temporary and just for testing.
    get:
      summary: "Fetch the inventory data for an organization without pushing to the inventory."
      operationId: getInventoryForOrg
      tags:
        - inventory
      responses:
        '200':
          description: 'The request for inventory data was successful.'
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/OrgInventory"
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: "Fetch the inventory data for an organization and push into the unified inventory store."
      operationId: updateInventoryForOrg
      tags:
        - inventory
      responses:
        # Could be 202 Accepted if we go async.
        '200':
          description: "The request to update the inventory was successful."
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /status:
    get:
      description: "Get the status of the service. Can be used as a simple liveness probe."
      operationId: getStatus
      tags:
        - status
      responses:
        '200':
          description: "The request to get the status of the server was successful."
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Status"
        '500':
          $ref: '#/components/responses/InternalServerError'
  /status/ready:
    get:
      description: "Get the readiness of the service. I.e. is the service able to handle requests."
      operationId: getReadiness
      tags:
        - status
      responses:
        '200':
          description: "The request to get the readiness status of the server was successful."
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/Readiness"
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

components:
  responses:
    InternalServerError:
      description: "An internal server error has occurred and is not recoverable."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Error"
    BadRequest:
      description: "The server could could not process the current request."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Error"
    Forbidden:
      description: "The request was valid, but the request was refused by the server."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Error"
    ResourceNotFound:
      description: "The requested resource was not found."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Error"
    ServiceUnavailable:
      description: "The server is currently unavailable."
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    ConsumerInventory:
      # The properties list here will depend on what is returned
      # from the IT endpoint.
      required:
        - consumerUuid
        - ownerAccountKey
      properties:
        id:
          type: integer
          format: int64
        ownerAccountKey:
          type: string
        hypervisorHostName:
          type: string
        guestHypervisor:
          type: string
        guestId:
          type: string
        installedProducts:
          type: object
          additionalProperties:
            type: string
        lastCheckin:
          # TODO Should this be a datetime type instead of a long?
          type: integer
          format: int64
        consumerType:
          type: string
        systemPurposeFacts:
          type: object
          additionalProperties:
            type: string
        consumerFacts:
          type: object
          additionalProperties:
            type: string

    OrgInventory:
      properties:
        consumerInventories:
          type: array
          items:
            $ref: "#/components/schemas/ConsumerInventory"

    Status:
      required:
        - version
      properties:
        version:
          type: string

    Readiness:
      required:
        - availability
      properties:
        availability:
          type: string

    Errors:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"

    Error:
      required:
        - status
        - code
        - title
      properties:
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string

<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <contextName>rhsm-conduit</contextName>
    <appender name="ConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{ISO8601} [thread=%thread] [%X{requestType}=%X{requestUuid}, org=%X{org}, csid=%X{csid}] %-5p %c - %m%n</pattern>
        </encoder>
    </appender>

    <!--
    <appender name="RhsmConduitAppender" class="ch.qos.logback.core.FileAppender">
        <file>/var/log/rhsm-conduit/rhsm-conduit.log</file>
        <encoder>
            <pattern>%d{ISO8601} [thread=%thread] [%X{requestType}=%X{requestUuid}, org=%X{org}, csid=%X{csid}] %-5p %c - %m%n</pattern>
        </encoder>
    </appender>
    -->

    <!-- The filter in EmergencyAppender filters out all messages *except* those that indicate something is wrong with the CloudWatch appender -->
    <!--
    <appender name="EmergencyAppender" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="org.candlepin.insights.logging.CloudWatchEmergencyFilter" />
        <encoder>
            <pattern>%d{ISO8601} [thread=%thread] [%X{requestType}=%X{requestUuid}, org=%X{org}, csid=%X{csid}] %-5p %c - %m%n</pattern>
        </encoder>
    </appender>
    -->

    <!-- Note that the below use of "appender-ref" is a custom option specific to CloudWatchAppender; it's only used when logging to CloudWatch fails - see https://github.com/j256/cloudwatch-logback-appender#emergency-appender -->
    <!--
    <appender name="CloudWatchAppender" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
        <region>${AWS_REGION}</region>
        <logGroup>platform</logGroup>
        <logStream>namespace</logStream>
        <layout class="net.logstash.logback.layout.LogstashLayout" />
        <appender-ref ref="EmergencyAppender" />
    </appender>

    <appender name="ErrorAppender" class="ch.qos.logback.core.FileAppender">
        <file>/var/log/rhsm-conduit/error.log</file>
        <encoder>
            <pattern>%d{ISO8601} [thread=%thread] [%X{requestType}=%X{requestUuid}, org=%X{org}, csid=%X{csid}] %-5p %c - %m%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
    </appender>
    -->

    <appender name="SplunkAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE:-/tmp/rhsm-conduit.log}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        <!-- daily rollover -->
        <fileNamePattern>${LOG_FILE:-/tmp/rhsm-conduit.log}.%d{yyyy-MM-dd-HH-mm}.log</fileNamePattern>
        <maxHistory>1</maxHistory>
        <totalSizeCap>100MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd'T'HH:mm:ss.SSS'+0000'} [thread=%t] [level=%p] [category=%c] %m%n</pattern>
        </encoder>
    </appender>

    <logger name="org.candlepin" level="INFO"/>

    <root level="WARN">
        <appender-ref ref="ConsoleAppender" />
        <!--<appender-ref ref="RhsmConduitAppender" />-->
        <!--<appender-ref ref="ErrorAppender" />-->
        <!-- The intended usage is to activate *both* CloudWatch appender and ConsoleAppender, so we can see logs in both the application console and CloudWatch -->
        <!--<appender-ref ref="CloudWatchAppender" />-->
        <appender-ref ref="SplunkAppender" />
    </root>
</configuration>
